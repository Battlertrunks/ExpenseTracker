{"ast":null,"code":"var _jsxFileName = \"/Users/gavinszczesniak/Desktop/reactTurorial1/expense-tracker/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactDom from 'react-dom';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MainScreen() {\n  _s();\n\n  const [totalExpense, setTotalExpense] = useState(0);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (totalExpense) {\n      const expense = {\n        id: new Date().getTime().toString()\n      };\n      setTotalExpense(payment => {\n        return [...payment, expense];\n      });\n    } else {\n      console.log('empty expense.');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Eye Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"expenseTotal\",\n          children: \"Expense : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: totalExpense,\n          onChange: e => setTotalExpense(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(MainScreen, \"qsPStSEcgGCtVn8ZnNUynr6zcyM=\");\n\n_c = MainScreen;\nReactDom.render( /*#__PURE__*/_jsxDEV(MainScreen, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 40,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"MainScreen\");","map":{"version":3,"sources":["/Users/gavinszczesniak/Desktop/reactTurorial1/expense-tracker/src/index.js"],"names":["React","ReactDom","useState","MainScreen","totalExpense","setTotalExpense","handleSubmit","e","preventDefault","expense","id","Date","getTime","toString","payment","console","log","target","value","render","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,SAASC,QAAT,QAAyB,OAAzB;;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAClB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCH,QAAQ,CAAC,CAAD,CAAhD;;AAEA,QAAMI,YAAY,GAAIC,CAAD,IAAO;AAC5BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIJ,YAAJ,EAAkB;AACd,YAAMK,OAAO,GAAG;AAACC,QAAAA,EAAE,EAAE,IAAIC,IAAJ,GAAWC,OAAX,GAAqBC,QAArB;AAAL,OAAhB;AACAR,MAAAA,eAAe,CAAES,OAAD,IAAY;AACxB,eAAO,CAAC,GAAGA,OAAJ,EAAaL,OAAb,CAAP;AACH,OAFc,CAAf;AAGH,KALD,MAKO;AACHM,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH;AACJ,GAVG;;AAYA,sBACI;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAEV,YAAhB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACA,UAAA,IAAI,EAAC,MADL;AAEA,UAAA,KAAK,EAAEF,YAFP;AAGA,UAAA,QAAQ,EAAGG,CAAD,IAAOF,eAAe,CAACE,CAAC,CAACU,MAAF,CAASC,KAAV;AAHhC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAUI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAiBH;;GAhCQf,U;;KAAAA,U;AAkCTF,QAAQ,CAACkB,MAAT,eAAgB,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAgCC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAhC","sourcesContent":["import React from 'react'\nimport ReactDom from 'react-dom'\n\nimport { useState } from 'react';\n\nfunction MainScreen() {\n    const [totalExpense, setTotalExpense] = useState(0);\n\n    const handleSubmit = (e) => {\n    e.preventDefault();\n    if (totalExpense) {\n        const expense = {id: new Date().getTime().toString() };\n        setTotalExpense((payment) =>{\n            return [...payment, expense];\n        });\n    } else {\n        console.log('empty expense.')\n    }\n}\n\n    return (  \n        <>\n            <form onSubmit={handleSubmit}>\n                <h1>Eye Expense</h1>\n                <div>\n                    <label htmlFor=\"expenseTotal\">Expense : </label>\n                    <input \n                    type='text' \n                    value={totalExpense} \n                    onChange={(e) => setTotalExpense(e.target.value)}\n                    />\n                </div>\n                <button type='submit'>Submit</button>\n\n            </form>\n        </>\n    );\n}\n\nReactDom.render(<MainScreen />, document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}